name: zama-kms-gateway

services:
  # 5. Launch key-gen
  setup-kms-key-crs:
    container_name: ${DOCKER_COMPOSE_PROJECT}-setup-kms-key-crs
    image: ghcr.io/zama-ai/kms-blockchain-simulator:${DOCKER_IMAGES_TAG}
    build:
      context: .
      dockerfile: blockchain/simulator/operations/docker/ci.dockerfile
    depends_on:
      setup-kms-blockchain-contracts:
        condition: service_completed_successfully
    environment:
      - RUST_LOG=info
    entrypoint: >
      /bin/sh -c " sleep 2 && {
        echo 'Launching insecure key-gen' &&
        simulator -f /app/config/local_threshold_from_compose.toml --max-iter 3600 insecure-key-gen &&
        echo 'Launching crs-gen' &&
        simulator -f /app/config/local_threshold_from_compose.toml --max-iter 3600 insecure-crs-gen --max-num-bits 2048 &&
        echo 'Success'
      } 2>&1 | tee -a /app/logs/key_crs_gen.log "
    volumes:
      - ../blockchain/simulator/config:/app/config
      - setup_kms_key_crs_logs:/app/logs

  # 6. Start gateway with key-id from key-gen
  gateway:
    container_name: ${DOCKER_COMPOSE_PROJECT}-gateway
    depends_on:
      setup-kms-key-crs:
        condition: service_completed_successfully

    image: ghcr.io/zama-ai/kms-blockchain-gateway:${DOCKER_IMAGES_TAG}
    build:
      context: .
      dockerfile: blockchain/gateway/operations/docker/dev.dockerfile
    ports:
      - "7077:7077"
    entrypoint: >
      /bin/sh -c "/app/gateway/update_key_crs_id.sh && sleep 2 && gateway"
    volumes:
      - ../blockchain/gateway/config/connector.toml:/app/gateway/config/connector.toml
      - ../blockchain/gateway/config/gateway_threshold.toml:/app/gateway/config/gateway.toml
      - ../scripts/update_key_crs_id.sh:/app/gateway/update_key_crs_id.sh
      - setup_kms_key_crs_logs:/app/logs_keygen:ro
      - ../gw_state/:/app/gateway/gw_state/

    environment:
      - RUST_BACKTRACE=1
    # TODO: Validate that we have a status endpoint on the gateway
    # healthcheck:
    #   test: "wget -Sq --spider http://localhost:7077/status"
    #   interval: 2s
    #   timeout: 2s
    #   retries: 10
    #   start_period: 5s

volumes:
  setup_kms_key_crs_logs:
